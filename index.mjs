// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array-like-object@v0.2.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-zeros@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ndarraylike2object@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-arraylike2object@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-zeros@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-broadcast-shapes@v0.2.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-maybe-broadcast-array@v0.2.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-vind2bind@v0.2.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-read-only@v0.2.0-esm/index.mjs";function f(r,e,a,t,s){var n,i,o,d,l,m,u,f,p,y,c,b,g,j,v,w,x,E,k,T,V,I,F,z;if(v=r.length,b=r.shape,g=e.shape,j=a.shape,n=r.data,i=e.data,o=a.data,w=r.strides,x=e.strides,E=a.strides,k=r.offset,T=e.offset,V=a.offset,d=r.order,l=e.order,m=a.order,u=r.accessors[0],f=e.accessors[0],p=a.accessors[1],y=r.ref,c=e.ref,0!==b.length||0!==g.length)for(z=v-1;z>=0;z--)I=h(b,w,k,d,z,"throw"),F=h(g,x,T,l,z,"throw"),p(o,h(j,E,V,m,z,"throw"),t.call(s,u(n,I),f(i,F),z,[y,c]));else p(o,V,t.call(s,u(n,k),f(i,T),0,[y,c]))}function p(r,e,a,t,s){var n,i,o,d,l,m,h;for(n=r.data,i=e.data,o=a.data,d=r.accessors[0],l=e.accessors[0],m=a.accessors[1],h=n.length-1;h>=0;h--)m(o,h,t.call(s,d(n,h),l(i,h),h,[n,i]))}function y(r,h,u,y){var c,b,g,j,v;if(!t(u))throw new TypeError(m("invalid argument. Second argument must be a function. Value: `%s`.",u));if(c=a(r),b=a(h),c){if(!b)throw new TypeError(m("invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.",h));if(null===(v=d([r.shape,h.shape])))throw new Error("invalid arguments. Input ndarrays must be broadcast compatible.");return(j=n(l(r,v))).ref=r,r=j,(j=n(l(h,v))).ref=h,h=j,g=o(v,{dtype:"generic",order:r.order}),f(r,h,n(g),u,y),g}if(e(r)){if(b||!e(h))throw new TypeError(m("invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.",h));if(h.length!==r.length)throw new RangeError("invalid arguments. Input arrays must have the same length.");return g=s(r.length),p(i(r),i(h),i(g),u,y),g}throw new TypeError(m("invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.",r))}function c(r,s,o,d,h){var y,c,b,g,j;if(!t(d))throw new TypeError(m("invalid argument. Fourth argument must be a function. Value: `%s`.",d));if(y=a(r),c=a(s),b=a(o),y){if(!c)throw new TypeError(m("invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.",s));if(!b)throw new TypeError(m("invalid argument. If the input arrays are ndarrays, the output array must also be an ndarray. Value: `%s`.",o));if(u(o))throw new Error("invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.");return j=(o=n(o)).shape,(g=n(l(r,j))).ref=r,r=g,(g=n(l(s,j))).ref=s,f(r,s=g,o,d,h),o.ref}if(e(r)){if(c||!e(s))throw new TypeError(m("invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.",s));if(b||!e(o))throw new TypeError(m("invalid argument. If the input arrays are array-like objects, the output array must also be an array-like object. Value: `%s`.",o));if(r.length!==s.length||s.length!==o.length)throw new RangeError("invalid arguments. Input and output arrays must have the same length.");return p(i(r),i(s),i(o),d,h),o}throw new TypeError(m("invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.",r))}r(y,"assign",c);export{c as assign,y as default};
//# sourceMappingURL=index.mjs.map
